// ==========================================================================
// Project:   xTuple Postbooks - Business Management System Framework
// Copyright: Â©2011 OpenMFG LLC, d/b/a xTuple
// ==========================================================================
/*globals Postbooks sc_assert */

sc_require('views/carousel');

var base03 =   "#002b36";
var base02 =   "#073642";
var base01 =   "#586e75";
var base00 =   "#657b83";
var base0 =    "#839496";
var base1 =    "#93a1a1";
var base2 =    "#eee8d5";
var base3 =    "#fdf6e3";
var yellow =   "#b58900";
var orange =   "#cb4b16";
var red =      "#dc322f";
var magenta =  "#d33682";
var violet =   "#6c71c4";
var blue =     "#268bd2";
var cyan =     "#2aa198";
var green =    "#859900";
var white =    "white";

/**
  This surface lays out its subsurfaces, in order, from left to right. Each 
  subsurface is sized so that it's frame is the same size as the Carousel.

  By default, the first subsurface is visible. You can choose another 
  subsurface by doing `carousel.makeSurfaceVisible(theSuburface)`.

  @extends SC.CompositeSurface
*/
Postbooks.TileCarousel = Postbooks.Carousel.extend({

  _sc_backgroundColor: 'black',

  updateTrayLayout: function() {
    var tray = this._sc_tray,
        frame = SC.MakeRect(this.get('frame')),
        width = frame.width, height = frame.height;

    sc_assert(tray);
    var slides = tray.get('subsurfaces').length || 1; // Make at least one.
  },

  initTray: function() {
    var tray;
    tray = this._sc_tray = Postbooks.InternalTileCarouselTray.create();
    this.get('subsurfaces').pushObject(tray);
  }

});

Postbooks.InternalTileCarouselTray = SC.CompositeSurface.extend({

  _sc_backgroundColor: base01,

  mouseDown: function(evt) {
    // console.log('Postbooks.InternalTileCarouselTray#mouseDown()');
    this._clientX = evt.clientX;
    this._startX = this.get('frame').x;
    // this._clientY = evt.clientY;
    this._needDirection = true;
    return true;
  },

  mouseDragged: function(evt) {
    // console.log('Postbooks.InternalTileCarouselTray#mouseDragged()');
    SC.AnimationTransaction.begin({ duration: 0 });
    var frame = this.get('frame');
    if (this._needDirection) {
      // debugger;
      this._needDirection = false;
      var currentSlide = this._nextSlide || 0;
      if (evt.clientX - this._clientX > 0) {
        currentSlide--;
      } else {
        currentSlide++;
      }

      if (currentSlide >= this.__slides__) currentSlide = this.__slides__ - 1;
      if (currentSlide < 0) currentSlide = 0;

      this._nextSlide = currentSlide;
    }
    frame.x = frame.x + evt.clientX - this._clientX;
    // frame.y = frame.y + evt.clientY - this._clientY;
    this._clientX = evt.clientX;
    // this._clientY = evt.clientY;
    SC.AnimationTransaction.end();
    return true;
  },

  mouseUp: function(evt) {
    // console.log('Postbooks.InternalTileCarouselTray#mouseUp()');
    SC.AnimationTransaction.begin({ duration: 300 });
    var frame = this.get('frame');
    // frame.x = frame.x + evt.clientX - this._clientX;
    frame.x = this._nextSlide * -this.getPath('carousel.frame').width;
    // frame.x = this._startX;
    // frame.y = frame.y + evt.clientY - this._clientY;
    this.set('frame', frame);
    delete this._clientX;
    // delete this._clientY;
    SC.AnimationTransaction.end();
    return true;
  },

  carousel: function() {
    return this.get('supersurface');
  }.property(),

  updateLayout: function() {

  }

});
