<?xml version="1.0" encoding="UTF-8"?>
<action-sequence> 
  <title>PRPT to Print Via Javascript</title>
  <version>1</version>
  <logging-level>TRACE</logging-level>
  <documentation> 
    <author>Jeff Gunderson</author>  
    <description>PRPT to Print Via Javascript</description>  
    <help/>  
    <result-type>report</result-type>  
    <icon/> 
  </documentation>

  <inputs> 
    <outputTarget type="string"> 
      <default-value><![CDATA[pageable/pdf]]></default-value>  
      <sources> 
        <request>output-target</request> 
      </sources> 
    </outputTarget>  
    <printerName type="string"> 
      <sources> 
        <request>printer-name</request> 
      </sources> 
    </printerName>  
    <path type="string"> 
      <sources> 
        <request>path</request> 
      </sources> 
    </path>  
    <organization type="string"> 
      <sources> 
        <request>org</request> 
      </sources> 
    </organization>  
    <locale type="string"> 
      <sources> 
        <request>locale</request> 
      </sources> 
    </locale>  
    <name type="string"> 
      <sources> 
        <request>name</request> 
      </sources> 
    </name>  
    <datasource type="string"> 
      <sources> 
        <request>datasource</request> 
      </sources> 
    </datasource>  
    <datakey type="string"> 
      <sources> 
        <request>datakey</request> 
      </sources> 
    </datakey> 
  </inputs>

  <outputs/>

  <resources/>
  
  <actions> 
    <action-definition> 
      <component-name>JavascriptRule</component-name>
      <action-type>Print PRPT</action-type>
      <action-inputs> 
        <outputTarget type="string"/>  
        <locale type="string"/>  
        <datasource type="string"/>  
        <datakey type="string"/>  
        <organization type="string"/>  
        <printerName type="string"/>  
        <name type="string"/> 
      </action-inputs>
      <action-outputs> 
        <myReport type="content"/> 
      </action-outputs>
      <component-definition> 
        <script><![CDATA[//
// Get pentaho runtime context and set up InputStream to our report 
//
var runtimeContext = rule.getRuntimeContext();
var currentPath = new java.io.File( "." ).getCanonicalPath();
var reportPath = currentPath + "//..//..//pentaho-solutions//xtuple//prpt//" + name;
var reportStream = new java.io.FileInputStream(reportPath);
//
// Set up Reporting component with our report stream
//
var rc = new Packages.org.pentaho.reporting.platform.plugin.SimpleReportingComponent();
rc.setOutputType('application/pdf');
rc.setReportDefinitionInputStream(reportStream);
//
// Set report parameters
//
var map = new Packages.java.util.HashMap();
map.put("locale", locale);
map.put("datasource", datasource);
map.put("datakey", datakey);
map.put("org", organization);
rc.setInputs(map);
var report = rc.getReport();
var parameterContext = new Packages.org.pentaho.reporting.engine.classic.core.parameters.DefaultParameterContext(report);
parameterContext.open();
rc.applyInputsToReportParameters(report, parameterContext);
parameterContext.close();
//
// Set to print & run
//
rc.setPrint(true);
rc.setPrinter(printerName);
rc.execute();]]></script> 
      </component-definition> 
    </action-definition>
 
  </actions> 
</action-sequence>