
// generated by __generate_template.py (on 2011-08-12)

// require some core modules
var UTIL    = require("util");
var PATH    = require("path");

// load into module namespace from above
require("tools");
require("exception");
require("store");

// load into module namespace from level
require("record");


XT.Locale = XT.Record.extend({

  definition: {

    // sproutcore record equivalent
    sctype: "XT.Locale",

    // postgres table
    table: "locale",

    // postgres schema
    schema: "public",

    // posgres sequence
    sequence: "locale_locale_id_seq",

    // fields as columns
    fields: {


      //...................................
      // sproutcore fields

      guid:                 "locale_id",

      // FOLLOW SUIT WITH ENTRIES IN THE FORM
      // {SPROUTCORE_FIELD} => {POSTGRES_COLUMN} (without braces or arrow...)
      // FIELDS MUST BE DEFINED EVEN IF IT HAS A TOMANY OR TOONE RELATION
    
      code:                 "locale_code",

      descrip:              "locale_descrip",

      comments:             "locale_comments",

      error_color:          "locale_error_color",

      warning_color:        "locale_warning_color",

      emphasis_color:       "locale_emphasis_color",

      altemphasis_color:    "locale_altemphasis_color",

      expired_color:        "locale_expired_color",

      future_color:         "locale_future_color",

      curr_scale:           "locale_curr_scale",

      salesprice_scale:     "locale_salesprice_scale",

      purchprice_scale:     "locale_purchprice_scale",

      extprice_scale:       "locale_extprice_scale",

      cost_scale:           "locale_cost_scale",

      qty_scale:            "locale_qty_scale",

      qtyper_scale:         "locale_qty_scale",

      uomratio_scale:       "locale_uomratio_scale",

      percent_scale:        "locale_percent_scale",

    },

    //..................................
    // toMany mappings

    toMany: {

      /** @example
        
        The following can be found in the XT.CrmAccount definition:

        comments:       XT.Record.toMany({
                          self:     "XT.CrmAccount",
                          relation: "XT.Comment",
                          on:       "guid",
                          to:       "source",
                          static:   XT.Record.static({ "comment_source":"'CRMA'" }),
                        }),

      */

    }, // toMany

    //....................................
    // toOne mappings

    toOne: {

      /** @example

        The following can be found in the XT.CrmAccount definition:

        primaryContact:     XT.Record.toOne({
                              self:     "XT.CrmAccount",
                              relation: "XT.Contact",
                              to:       "guid",
                            }),

      */

      country:              XT.Record.toOne({
                              self:     "XT.Locale",
                              relation: "XT.Country",
                              to:       "guid",
                            }),

    }, // toOne

  }, // definition

  /** @private */
  xtClass: "XT.Locale",

});

XT.Store.recordManager.emit("definitionLoaded", XT.Locale);
