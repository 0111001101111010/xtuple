
// generated by __generate_template.py (on 2011-08-15)

// require some core modules
var UTIL    = require("util");
var PATH    = require("path");

// load into module namespace from above
require("tools");
require("exception");
require("store");

// load into module namespace from level
require("record");


XT.Opportunity = XT.Record.extend({

  definition: {

    // sproutcore record equivalent
    sctype: "XT.Opportunity",

    // postgres table
    table: "ophead",

    // postgres schema
    schema: "public",

    // postgres sequence
    sequence: "ophead_ophead_id_seq",

    // fields as columns
    fields: {


      //...................................
      // sproutcore fields

      guid:                 "ophead_id",

      // FOLLOW SUIT WITH ENTRIES IN THE FORM
      // {SPROUTCORE_FIELD} => {POSTGRES_COLUMN} (without braces or arrow...)
      // FIELDS MUST BE DEFINED EVEN IF IT HAS A TOMANY OR TOONE RELATION
      
       number:              "ophead_number",

      
       name:                "ophead_name",

      
       isActive:            "ophead_active",

      
       startDate:           "ophead_start_date",

      
       dueDate:             "ophead_target_date",

      
       assignedDate:        "ophead_assigned_date",

      
       completeDate:        "ophead_actual_date",

      
       notes:               "ophead_notes",

      
       amount:              "ophead_amount",

      
       probability:         "ophead_probability_prcnt",

      
       owner:               "ophead_owner_username",

      
       assignedTo:          "ophead_username",

      
       stage:               "ophead_opstage_id",

      
       priority:            "ophead_priority_id",

      
       crmAccount:          "ophead_crmacct_id",

      
       contact:             "ophead_cntct_id",

      
       source:              "ophead_opsource_id",

      
       type:                "ophead_optype_id",

      
       currency:            "ophead_curr_id",

    },

    //..................................
    // toMany mappings

    toMany: {

      comments: XT.Record.toMany({
        self:     "XT.Opportunity",
        relation: "XT.OpportunityComment",
        on:       "guid",
        to:       "source",
        static:   XT.Record.static({ "comment_source":"'OPP'" }),
      }),


      characteristics: XT.Record.toMany({
        self:     "XT.Opportunity",
        relation: "XT.CharacteristicAssignment",
        on:       "guid",
        to:       "target",
        static:   XT.Record.static({ "charass_target_type":"'OPP'" }),
      })

    }, // toMany

  }, // definition

  /** @private */
  xtClass: "XT.Opportunity",

});

XT.Store.recordManager.emit("definitionLoaded", XT.Opportunity);
