
// require some core modules
var UTIL    = require("util");
var PATH    = require("path");

// load into module namespace from above
require("tools");
require("exception");
require("store");

// load into module namespace from level
require("record");

XT.Quote = XT.Record.extend({

  definition: {

    // sproutcore record equivalent
    sctype: "XT.Quote",

    // postgres table
    table: "quhead",

    // postgres schema
    schema: "public",

    // postgres sequence for guid/id
    sequence: "quhead_quhead_id_seq",

    // fields as columns
    fields: {
      
      //....................................
      // sproutcore fields

      guid:                    "quhead_id",

      number:                  "quhead_number",

      quoteDate:               "quhead_quotedate",

      quoteExpire:             "quhead_expire",

      stage:                   "quhead_status",

      customer:                "quhead_cust_id",

      billtoName:              "quhead_billtoname",

      billtoAddress1:          "quhead_billtoaddress1",

      billtoAddress2:          "quhead_billtoaddress2",

      billtoAddress3:          "quhead_billtoaddress3",

      billtoCity:              "quhead_billtocity",

      billtoState:             "quhead_billtostate",

      billtoPostalcode:        "quhead_billtozip",

      billtoCountry:           "quhead_billtocountry",

      billtoContact:           "quhead_billto_cntct_id",

      billtoContactHonorific:  "quhead_billto_cntct_honorific",

      billtoContactFirstName:  "quhead_billto_cntct_first_name",

      billtoContactMiddle:     "quhead_billto_cntct_middle",

      billtoContactLastName:   "quhead_billto_cntct_last_name",

      billtoContactSuffix:     "quhead_billto_cntct_suffix",

      billtoContactJobtitle:   "quhead_billto_cntct_title",

      billtoContactPhone:      "quhead_billto_cntct_phone",

      billtoContactFax:        "quhead_billto_cntct_fax",

      billtoContactEmail:      "quhead_billto_cntct_email",

      shipto:                  "quhead_shipto_id",

      shiptoName:              "quhead_shiptoname",

      shiptoAddress1:          "quhead_shiptoaddress1",

      shiptoAddress2:          "quhead_shiptoaddress2",

      shiptoAddress3:          "quhead_shiptoaddress3",

      shiptoCity:              "quhead_shiptocity",

      shiptoState:             "quhead_shiptostate",

      shiptoPostalcode:        "quhead_shiptozipcode",

      shiptoCountry:           "quhead_shiptocountry",

      shiptoContact:           "quhead_shipto_cntct_id",

      shiptoContactHonorific:  "quhead_shipto_cntct_honorific",

      shiptoContactFirstName:  "quhead_shipto_cntct_first_name",

      shiptoContactMiddle:     "quhead_shipto_cntct_middle",

      shiptoContactLastName:   "quhead_shipto_cntct_last_name",

      shiptoContactSuffix:     "quhead_shipto_cntct_suffix",

      shiptoContactJobtitle:   "quhead_shipto_cntct_title",

      shiptoContactPhone:      "quhead_shipto_cntct_phone",

      shiptoContactFax:        "quhead_shipto_cntct_fax",

      shiptoContactEmail:      "quhead_shipto_cntct_email",

      currency:                "quhead_curr_id",

      miscCharge:              "quhead_misc",

      miscAccount:             "quhead_misc_accnt_id",

      miscDescription:         "quhead_misc_descrip",

      calculateFreight:        "quhead_calcfreight",

      freight:                 "quhead_freight",

      packDate:                "quhead_packdate",

      terms:                   "quhead_terms_id",

      taxZone:                 "quhead_taxzone_id",

      taxType:                 "quhead_taxtype_id",

      fob:                     "quhead_fob",

      shipVia:                 "quhead_shipvia",

      salesRep:                "quhead_salesrep_id",

      commission:              "quhead_commission",

      origin:                  "quhead_origin",

      project:                 "quhead_prj_id",

      opportunity:             "quhead_ophead_id",

      orderNotes:              "quhead_ordercomments",

      shippingNotes:           "quhead_shipcomments",

      site:                    "quhead_warehous_id"

    },

    //....................................
    // toMany mappings
                              
    toMany: {

      comments:     XT.Record.toMany({
        self:     "XT.Quote",
        relation: "XT.Comment",
        on:       "guid",
        to:       "source",
        static:   XT.Record.static({ "comment_source":"'Q'" })
      }),

      items:  XT.Record.toMany({
        self:     "XT.Quote",
        relation: "XT.QuoteItem",
        on:       "guid",
        to:       "quote"
      })

    },

  }, // definition

  /** @private */
  xtClass: "XT.Quote"

});

XT.Store.recordManager.emit("definitionLoaded", XT.Quote);
