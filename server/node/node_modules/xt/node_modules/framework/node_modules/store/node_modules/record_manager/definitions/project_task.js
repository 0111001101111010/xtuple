
// require some core modules
var UTIL    = require("util");
var PATH    = require("path");

// load into module namespace from above
require("tools");
require("exception");
require("store");

// load into module namespace from level
require("record");

XT.ProjectTask = XT.Record.extend({

  definition: {

    // sproutcore record equivalent
    sctype: "XT.ProjectTask",

    // postgres table
    table: "prjtask",

    // postgres schema
    schema: "public",

    // postgres sequence for guid/id
    sequence: "prjtask_prjtask_id_seq",

    // fields as columns
    fields: {
      
      //....................................
      // sproutcore fields

      guid:             "prjtask_id",

      project:          "prjtask_prj_id",

      number:           "prjtask_number",

      name:             "prjtask_name",

      stage:            "prjtask_status",

      startDate:        "prjtask_start_date",

      dueDate:          "prjtask_due_date",

      assignDate:       "prjtask_assigned_date",

      completeDate:     "prjtask_completed_date",

      notes:            "prjtask_descrip",

      budgetedHours:    "prjtask_hours_budget",

      actualHours:      "prjtask_hours_actual",

      budgetedExpenses: "prjtask_exp_budget",

      actualExpenses:   "prjtask_exp_actual",

      owner:            "prjtask_owner_username",

      assignedTo:       "prjtask_username"

    },

    //....................................
    // toMany mappings

    toMany: {

      comments:     XT.Record.toMany({
        self:     "XT.ProjectTask",
        relation: "XT.ProjectTaskComment",
        on:       "guid",
        to:       "source",
        static:   XT.Record.static({ "comment_source":"'TA'" })
      })

    }

  }, // definition

  /** @private */
  xtClass: "XT.ProjectTask",

});

XT.Store.recordManager.emit("definitionLoaded", XT.ProjectTask);
