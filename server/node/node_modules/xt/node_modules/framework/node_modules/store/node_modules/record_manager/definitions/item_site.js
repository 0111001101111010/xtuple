
// require some core modules
var UTIL    = require("util");
var PATH    = require("path");

// load into module namespace from above
require("tools");
require("exception");
require("store");

// load into module namespace from level
require("record");

XT.ItemSite = XT.Record.extend({

  definition: {

    // sproutcore record equivalent
    sctype: "XT.ItemSite",

    // postgres table
    table: "itemsite",

    // postgres schema
    schema: "public",

    // postgres sequence for guid/id
    sequence: "itemsite_itemsite_id_seq",

    // fields as columns
    fields: {
      
      //....................................
      // sproutcore fields

      guid:                       "itemsite_id",

      item:                       "itemsite_item_id",

      site:                       "itemsite_warehous_id",

      isActive:                   "itemsite_active",

      isManufactured:             "itemsite_wosupply",

      isCreateSoWorkOrders:       "itemsite_createwo",

      isPurchased:                "itemsite_posupply",

      isCreateWoPurchaseRequests: "itemsite_createpr",

      isCreateSoPurchaseRequests: "itemsite_createsopr",

      isCreateSoPurchaseOrders:   "itemsite_createsopo",

      isSold:                     "itemsite_sold",

      soldRanking:                "itemsite_soldranking",

      plannerCode:                "itemsite_plancode_id",

      costCategory:               "itemsite_costcat_id",

      controlMethod:              "itemsite_controlmethod",

      costMethod:                 "itemsite_costmethod",

      isStocked:                  "itemsite_stocked",

      isAutoUpdateAbc:            "itemsite_abcclass",

      abcClass:                   "itemsite_abcclass",

      cycleCountFrequency:        "itemsite_cyclecountfreq",

      eventFence:                 "itemsite_eventfence",

      costRecognitionOverride:    "itemsite_cosdefault",

      isLocationControl:          "itemsite_loccntrl",

      location:                   "itemsite_location_id",

      locationText:               "itemsite_location",

      locationComment:            "itemsite_location_comments",

      isEnforceParameters:        "itemsite_useparams",

      orderLevel:                 "itemsite_reorderlevel",

      orderUpTo:                  "itemsite_ordertoqty",

      orderMinumum:               "itemsite_minordqty",

      orderMultiple:              "itemsite_multordqty",

      orderMaximum:               "itemsite_maxordqty",

      isEnforceParamsManual:      "itemsite_useparamsmanual",

      safetyStock:                "itemsite_safetystock",

      leadTime:                   "itemsite_leadtime",

      notes:                      "itemsite_notes"

    },

    //....................................
    // toMany mappings
                              
    toMany: {

      comments:     XT.Record.toMany({
        self:     "XT.ItemSite",
        relation: "XT.Comment",
        on:       "guid",
        to:       "source",
        static:   XT.Record.static({ "comment_source":"'IS'" })
      })

    },

  }, // definition

  /** @private */
  xtClass: "XT.ItemSite"

});

XT.Store.recordManager.emit("definitionLoaded", XT.ItemSite);
